services:
  server:
    build: .
    container_name: bsky-backend
    # command: sh dev.sh runserver 0.0.0.0:8000
    command: tail -f /dev/null
    ports:
      - 8002:8000
    volumes:
      - .:/app
      - .vscode-server:/root/.vscode-server
      - window-celery:/root/.cache
    healthcheck:
        test: ['CMD','curl','http://localhost:8002/']
        interval: 10s
        timeout: 5s
        retries: 2
        start_period: 5s
    restart: on-failure

    deploy:
      resources:
        reservations:
          devices:
            - driver: nvidia
              count: 'all'
              capabilities: [gpu]
  deploy: &deploy
    build: .
    entrypoint: sh run.sh
    container_name: cotton-backend
    restart: always
  deploy2:
    <<: *deploy
    container_name: cotton-backend2
  nginx:
    build:
      context: .
      dockerfile: nginx.dockerfile
    ports:
      - ${PORT:-8000}:8000
    restart: always
    depends_on:
      - deploy
      - deploy2
  celery:
    build: .
    container_name: cotton-celery
    entrypoint: sh celery.sh
    restart: on-failure

  beat:
    build: .
    container_name: cotton-celery-beat
    entrypoint: sh beat.sh
    restart: on-failure

  window-celery:
    build: .
    container_name: cotton-celery-window
    entrypoint: sh celery.sh window
    volumes:
      - window-celery:/root/.cache
    restart: on-failure
    deploy:
      resources:
        reservations:
          devices:
            - driver: nvidia
              device_ids: ['1']
              capabilities: [gpu]

volumes:
  window-celery:
   